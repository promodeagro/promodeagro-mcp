AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy Global Resources (us-east-1): Route53 -> WAF -> CloudFront for React UI Application'

Parameters:
  DomainName:
    Type: String
    Description: 'Domain name for the application (e.g., myapp.example.com)'
    Default: 'myapp.example.com'
  
  HostedZoneId:
    Type: String
    Description: 'Route53 Hosted Zone ID for the domain'
    
  BucketName:
    Type: String
    Description: 'S3 bucket name for hosting (must be globally unique)'
    Default: 'tmf-oda-ui-hosting-bucket'

  RegionalBucketDomainName:
    Type: String
    Description: 'Regional domain name of the S3 bucket from the regional stack'

  DeploymentRegion:
    Type: String
    Description: 'Region where the S3 bucket is deployed'
    Default: 'us-west-2'

  RegionalBucketName:
    Type: String
    Description: 'S3 bucket name from the regional stack'

  RegionalBucketArn:
    Type: String
    Description: 'S3 bucket ARN from the regional stack'

Resources:
  # SSL Certificate (must be in us-east-1 for CloudFront)
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId

  # CloudFront Origin Access Control
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-OAC'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # WAF Web ACL (must be in us-east-1 for CloudFront scope)
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub '${BucketName}-WebACL'
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          Priority: 2
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: KnownBadInputsRuleSetMetric
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${BucketName}-WebACL'

  # CloudFront Distribution (global service managed from us-east-1)
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Origins:
          - Id: S3Origin
            DomainName: !Ref RegionalBucketDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 0
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        WebACLId: !GetAtt WebACL.Arn

  # S3 Bucket Policy for CloudFront OAC - Created after CloudFront Distribution
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RegionalBucketName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${RegionalBucketArn}/*'
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  # Route53 Record
  Route53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID

Outputs:
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'
      
  CloudFrontDomainName:
    Description: 'CloudFront Distribution Domain Name'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-DistributionDomainName'
      
  WebsiteURL:
    Description: 'Website URL'
    Value: !Sub 'https://${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
      
  WebACLId:
    Description: 'WAF Web ACL ID'
    Value: !Ref WebACL
    Export:
      Name: !Sub '${AWS::StackName}-WebACLId'

  OriginAccessControlId:
    Description: 'CloudFront Origin Access Control ID'
    Value: !GetAtt OriginAccessControl.Id
    Export:
      Name: !Sub '${AWS::StackName}-OACId'

  CloudFrontDistributionArn:
    Description: 'CloudFront Distribution ARN'
    Value: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'
    Export:
      Name: !Sub '${AWS::StackName}-DistributionArn'
